{
    "name": "TransformationData",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "AZDB_Bookings",
                        "type": "DatasetReference"
                    },
                    "name": "Bookings"
                },
                {
                    "dataset": {
                        "referenceName": "AZDB_Classes",
                        "type": "DatasetReference"
                    },
                    "name": "Classes"
                },
                {
                    "dataset": {
                        "referenceName": "AZDB_Member",
                        "type": "DatasetReference"
                    },
                    "name": "Members"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "TD_BookingStats",
                        "type": "DatasetReference"
                    },
                    "name": "SinkBookings"
                },
                {
                    "dataset": {
                        "referenceName": "TD_Classes",
                        "type": "DatasetReference"
                    },
                    "name": "SinkClasses"
                },
                {
                    "dataset": {
                        "referenceName": "TD_Members",
                        "type": "DatasetReference"
                    },
                    "name": "SinkMembers"
                }
            ],
            "transformations": [
                {
                    "name": "SplitSchedule"
                },
                {
                    "name": "BookingCount"
                },
                {
                    "name": "BookingStats"
                },
                {
                    "name": "MemberStatus"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          booking_id as string,",
                "          member_id as string,",
                "          facility_id as string,",
                "          class_id as string,",
                "          booking_time as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table') ~> Bookings",
                "source(output(",
                "          class_id as string,",
                "          name as string,",
                "          instructor as string,",
                "          schedule as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table') ~> Classes",
                "source(output(",
                "          member_id as string,",
                "          first_name as string,",
                "          last_name as string,",
                "          email as string,",
                "          membership_type as string,",
                "          join_date as string,",
                "          region as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     isolationLevel: 'READ_UNCOMMITTED',",
                "     format: 'table') ~> Members",
                "Classes derive(dayofweek = substring(schedule, 1, 3),",
                "          starttime = substring(schedule, 5, 5),",
                "          endtime = substring(schedule, 11, 5)) ~> SplitSchedule",
                "Bookings aggregate(groupBy(member_id),",
                "     booking_count = count(booking_id)) ~> BookingCount",
                "BookingCount derive(BookingStats = iif(booking_count <= 1, 'Low', iif(booking_count <=2, 'Moderate', 'High'))) ~> BookingStats",
                "Members derive(is_new_member = iif(year(toDate(join_date)) == year(currentDate()), 'Yes', 'No')) ~> MemberStatus",
                "BookingStats sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:false,",
                "     format: 'table',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError') ~> SinkBookings",
                "SplitSchedule sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:false,",
                "     format: 'table',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError') ~> SinkClasses",
                "MemberStatus sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     deletable:false,",
                "     insertable:true,",
                "     updateable:false,",
                "     upsertable:false,",
                "     format: 'table',",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     errorHandlingOption: 'stopOnFirstError') ~> SinkMembers"
            ]
        }
    }
}
